My body had to recover this much for me to learn from observation again.

I took proper interest in understanding why marking a dialogue with the proper noun was important a long time ago, but I never saw a difference worth noting. Even trying to copy the authors I was reading. I initially concluded it was something that could be ignored until I changed my mind. So here I am, acknowledging that the unspoken rules of grammar are so difficult to learn, in written grammar, you'd probably have to become an artist just to give a damn.

I think it's quite possible to write a really amazing program in just 5 years of practice and 10 years of research, and the two could be happening at the same time. The reason is the code doesn't have to be clever. Nobody's going to see it. So yeah, any program that doesn't bug out and crash in the span of a day or two is actually pretty amazing if I am expected to spend money on a program that crashes in the first place. Or if dozens of people program one thing, and that contributes bugs that'll never resolve, there's no way that program could be considered anything but a stepping stone to designing a better solution. So if I write a program and remove all the bugs and say, this can't be improved, it's not even art and yet the concept was so absurd when I wrote it I can't help calling it a magnum opus. And there's probably no way to make it simpler without removing core features. There's no way to make it harder to hack without more of the same. And its sole purpose is to be run as a portion of a bigger program. The only thing to do is write more scripts that add functionality until there is a better design for swapping functionality into those modifyable peripheral codebases, then write a new add on that does it right or modifying the original program so that the peripheral functionality is dependent on the add on which might be a stupid idea because if nothing else it will require the files involved to be a little bigger.